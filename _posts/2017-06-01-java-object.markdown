---
layout:     post
title:      "Java 面向对象的程序设计"
subtitle:   "万物皆对象，不要算上我"
date:       2017-06-01 22:10:00
author:     "Bonismo"
header-img: "img/java/hello-world-banner.jpg"
header-mask: 0.3
catalog:    true
tags:
    - 类
    - 域
    - 方法
    - 对象
---

## 什么是面向对象？

- 1967年 Simula 提出面向对象概念。

- 编程是为了解决问题而存在的。

- 如果把一个问题看成对象，则可以拆分为基本两种。

  问题需要解决的条件，即存在的属性或特征。

  问题需要解决的动作或功能，即需要用什么方法来解决这个问题。

  再通俗一点理解就是：

  你买了一辆车，你需要车钥匙，汽油（属性），然后挂个挡（功能），可以跑了（问题）。

### 类 Class

- 是一个抽象的概念

- 对世间万物的抽象和概括，将一切抽象出属性和功能。即可以解决一切问题。

- 分类的依据：

    - 具有相同的特征或属性

        - 人都有名字、身高、体重、性别等

    - 具有相同的行为或功能

        - 人会游泳、唱歌、跑步、画画等

- 类 = 属性 + 功能

- 类 = 域 + 方法

- Class = field + method

- 类是创建对象的模板，是解决问题一个问题的抽象。

### 类的实际结构

        `访问限定修饰符` + class + 类名（驼峰命名）+
         `< 类型参数 extends 父类型名 & 父类型 & ...>` + ` extends 父类名称 `
           +  `implements 接口名称列表` {

                    域

                    方法

           }

### 域 field

   - 一类事物共有特征或属性

   - 域和方法常常紧密相关（没有车钥匙，车是开不走的）

   - 域的定义

        - 访问限定修饰符 + 类型名 + 域名

            - 注：类型名即数据类型

            - 注：域名即抽象出来的特性名字

   - 域的位置

        - 类体中

   - 方法的定义

        - 访问限定修饰符 + 返回类型 + 方法名（`参数列表 参数名字`）+ `throws 受检异常类列表`  {

        }

   - 方法的位置

        - 类体重