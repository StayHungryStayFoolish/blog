---
layout:     post
title:      "Java File 文件"
subtitle:   "对文件进行操作"
iframe:     ""
navcolor:   "invert"
author:     "Bonismo"
date:       2017-07-28
header-img: "img/java/hello-world-banner.jpg"
header-mask: 0.3
catalog:    true
tags:
    - 泛型
    - 类型安全
    - 类型检查
    - 简化代码
---

### File

- File 指代文件 file 或目录 directory

- File 不处理文件内容，只处理文件或目录的周边信息

    - 创建文件，对文件进行删除、获取文件所在目录信息、更改文件名字等

### 主要方法介绍

- canRead() 是否可读

- canWrite() 是否科协

- compareTo() 按字母顺序比较路径

- createNewFile() 创建文件

- delete() 删除文件或目录

- deleteOnExit() 在虚拟机终止时，请求删除文件或目录

- exists() 文件是否存在

- getAbsoluteFile() 获取绝对路径名形式

- getAbsolutePath() 获取绝对路径字符串形式

- getName() 获取路径名的文件或目录名称

- getParent() 获取父目录名字符串，无则返回 null

- getParentFile() 获取父目录路径名，无则返回 null

- getPath() 获取路径字符串

- isAbsolute() 是否局对路径

- isDirectory() 是否是目录

- isFile() 是否是文件

- length() 文件长度

- list(） 返回字符串数组，表示该路径的文件和目录，File 接收

- listFiles() 返回目录中文件，File 接收

- mkdir() 创建目录

- renameTo() 重命名

- toString() 返回路径名字符串

- toURI() 构造一个路径

### 例：

- 列出磁盘文件


        public class FileDemo3 {
             public static void main(String[] args){
                 File[] files =File.listRoots();
                 for(File file:files){
                     System.out.println(file);
                     if(file.length()>0){
                         String[] filenames =file.list();
                         for(String filename:filenames){
                             System.out.println(filename);
                         }
                     }
                 }
             }
         }


- 文件过滤